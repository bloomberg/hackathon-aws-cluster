{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Jepsen VPC Student",
  "Parameters": {
    "ImageId": {
      "Type": "String"
    },
    "KeyName": {
      "Type": "String"
    },
    "Bucket": {
      "Type": "String"
    },
    "IamProfile": {
      "Type": "String"
    },
    "ControlInstanceType": {
      "Type": "String"
    },
    "WorkerInstanceType": {
      "Type": "String"
    },
    "ControlDiskSize": {
      "Type": "Number"
    },
    "WorkerDiskSize": {
      "Type": "Number"
    },
    "VpcId": {
      "Type": "String"
    },
    "SecGroupAccess": {
      "Type": "String"
    },
    "RouteTable": {
      "Type": "String"
    },
    "SubnetNumber": {
      "Type": "String"
    }
  },
  "Resources": {
    "subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".0/24" ] ] },
        "VpcId": { "Ref": "VpcId" }
      }
    },
    "route": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "SubnetId": { "Ref": "subnet" }
      }
    },
    "secgroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Student Cluster",
        "VpcId": { "Ref": "VpcId" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
	    "SourceSecurityGroupId": { "Ref": "SecGroupAccess" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
	    "SourceSecurityGroupId": { "Ref": "SecGroupAccess" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
	    "SourceSecurityGroupId": { "Ref": "SecGroupAccess" }
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
	    "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "ingress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "secgroup" },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": { "Ref": "secgroup" }
      }
    },
    "controlWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Properties": { }
    },
    "controlWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Handle": { "Ref": "controlWaitHandle" },
	"Timeout": "1200",
	"Count": "1"
      }
    },
    "control": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "ControlInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "IamInstanceProfile": { "Ref": "IamProfile" },
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".100" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "ControlDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 w1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 w2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 w3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 w4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 w5 >> /etc/hosts\n",
                "echo w1 > /home/admin/nodes\n",
                "echo w2 >> /home/admin/nodes\n",
                "echo w3 >> /home/admin/nodes\n",
                "echo w4 >> /home/admin/nodes\n",
                "echo w5 >> /home/admin/nodes\n",
                "chmod 444 /home/admin/nodes\n",
                "chown admin:admin /home/admin/nodes\n",
                "rm -f /home/admin/.ssh/id_rsa*\n",
                "ssh-keygen -b 2048 -t rsa -f /home/admin/.ssh/id_rsa -q -N ''\n",
                "chown admin:admin /home/admin/.ssh/*\n",
                "cp /home/admin/.ssh/id_rsa.pub id_rsa.pub.", { "Ref": "SubnetNumber" }, "\n",
                "aws s3 cp id_rsa.pub.", { "Ref": "SubnetNumber" }, " s3://", { "Ref": "Bucket" }, "\n",
		"echo 'deb http://cloudfront.debian.net/debian stretch main' > /etc/apt/sources.list.d/stretch.list\n",
		"echo 'APT::Default-Release \"jessie\";' > /etc/apt/apt.conf.d/default-release\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
		"apt-get -y install python-setuptools\n",
		"easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
		"apt-get -y install shellinabox/stretch emacs-nox\n",
		"sed -i -e 's/4200/80/' /etc/default/shellinabox\n",
		"sed -i -e 's/--no-beep/--no-beep --disable-ssl --disable-ssl-menu/' /etc/default/shellinabox\n",
		"openssl rand 1000 | strings | grep -io [[:alnum:]] | head -n 16 | tr -d '\n' > /root/passwd.", { "Ref": "SubnetNumber" }, "\n",
		"usermod -p $(openssl passwd -1 `cat /root/passwd.", { "Ref": "SubnetNumber" }, "`) admin\n",
		"echo >> /root/passwd.", { "Ref": "SubnetNumber" }, "\n",
                "aws s3 cp /root/passwd.", { "Ref": "SubnetNumber" }, " s3://", { "Ref": "Bucket" }, "\n",
		"service shellinabox restart\n",
		"echo 'rescan-nodes' >> /home/admin/.bash_profile\n",
		"cfn-signal '", { "Ref": "controlWaitHandle" }, "' \n"
              ]
            ]
          }
        }
      }
    },
    "w1": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "controlWaitCondition",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "WorkerInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "IamInstanceProfile": { "Ref": "IamProfile" },
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".101" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "WorkerDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 w1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 w2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 w3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 w4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 w5 >> /etc/hosts\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
                "until aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
                "do\n",
                "  sleep 5\n",
                "done\n",
		"cat controlkey >> /home/admin/.ssh/authorized_keys\n",
                "chown admin:admin /home/admin/.ssh/*\n"
              ]
            ]
          }
        }
      }
    },
    "w2": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "controlWaitCondition",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "WorkerInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "IamInstanceProfile": { "Ref": "IamProfile" },
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".102" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "WorkerDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 w1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 w2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 w3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 w4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 w5 >> /etc/hosts\n",
                "until aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
                "do\n",
                "  sleep 5\n",
                "done\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
                "aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
		"cat controlkey >> /home/admin/.ssh/authorized_keys\n",
                "chown admin:admin /home/admin/.ssh/*\n"
              ]
            ]
          }
        }
      }
    },
    "w3": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "controlWaitCondition",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "WorkerInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "IamInstanceProfile": { "Ref": "IamProfile" },
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".103" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "WorkerDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 w1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 w2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 w3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 w4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 w5 >> /etc/hosts\n",
                "until aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
                "do\n",
                "  sleep 5\n",
                "done\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
		"cat controlkey >> /home/admin/.ssh/authorized_keys\n",
                "chown admin:admin /home/admin/.ssh/*\n"
              ]
            ]
          }
        }
      }
    },
    "w4": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "controlWaitCondition",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "WorkerInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "IamInstanceProfile": { "Ref": "IamProfile" },
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".104" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "WorkerDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 w1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 w2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 w3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 w4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 w5 >> /etc/hosts\n",
                "until aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
                "do\n",
                "  sleep 5\n",
                "done\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
		"cat controlkey >> /home/admin/.ssh/authorized_keys\n",
                "chown admin:admin /home/admin/.ssh/*\n"
              ]
            ]
          }
        }
      }
    },
    "w5": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "controlWaitCondition",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "WorkerInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "IamInstanceProfile": { "Ref": "IamProfile" },
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".105" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "WorkerDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 w1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 w2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 w3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 w4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 w5 >> /etc/hosts\n",
                "until aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
                "do\n",
                "  sleep 5\n",
                "done\n",
		"apt-get -y update\n",
		"apt-get -y upgrade\n",
		"cat controlkey >> /home/admin/.ssh/authorized_keys\n",
                "chown admin:admin /home/admin/.ssh/*\n"
              ]
            ]
          }
        }
      }
    }
  }
}
